# Aggregated Ethereum Identity Context 

> Updated at: 21:29 08/27/25

# docs.efp.app llms.txt

> Ethereum Follow Protocol (EFP) is an onchain social graph protocol for Ethereum accounts.

## Documentation 

- [EFP-Silo Deployment Guide](https://docs.efp.app/production/silo): Guide for deploying the EFP-Silo template on Railway with configuration instructions.
- [EFP Frequently Asked Questions](https://docs.efp.app/faq): To provide frequently asked questions about the Ethereum Follow Protocol and its functionalities.
- [EFP Logos Collection](https://docs.efp.app/design-components/logos): Downloadable EFP logos in multiple formats.
- [Design Component Colors](https://docs.efp.app/design-components/colors): To provide a reference for color specifications used in design components.
- [EFP List Roles](https://docs.efp.app/design/roles): Explains the roles associated with an EFP List in Ethereum including Owner, Manager, and User responsibilities.
- [EFP List Registry Overview](https://docs.efp.app/design/list-registry): Explains the EFP List Registry as an ERC-721 contract for minting EFP List NFTs.
- [Interpreting EFP Data](https://docs.efp.app/production/interpreting-state): This page explains how to interpret EFP data and validate list operations.
- [List Ops Structure](https://docs.efp.app/design/list-ops): Explains List Ops structure for list operations including encoding and operation codes.
- [List Storage Location](https://docs.efp.app/design/list-storage-location): This page outlines the specifications for defining list storage locations in the EFP system.
- [Translation Bounty Program](https://docs.efp.app/translationbounty): Encourage users to contribute translations for the EFP app and earn rewards.
- [EFP Glossary](https://docs.efp.app/design/glossary): Defines key terms related to the Ethereum Follow Protocol for users and developers.
- [Tagging System Overview](https://docs.efp.app/design/tags): Explains the tagging system used in EFP lists and their functions.
- [List Records Definition](https://docs.efp.app/design/list-records): Defines the structure and components of List Records in EFP, including versioning and record types.
- [EFP Deployments Overview](https://docs.efp.app/production/deployments): Listing smart contracts and their addresses for EFP deployments on various blockchain networks.
- [EFP Infrastructure Overview](https://docs.efp.app/production/infra): Overview of EFP's backend infrastructure components and setup.
- [EFP Follow Bot](https://docs.efp.app/production/follow-bot): To provide functionality for users to track Ethereum addresses and ENS names via a Telegram bot.
- [Bug Bounty Program](https://docs.efp.app/bugbounty): Encourages reporting vulnerabilities in specific smart contracts for monetary rewards.
- [EFP List Metadata Overview](https://docs.efp.app/design/list-metadata): Explains List Metadata structure for EFP, including keys and roles assigned to Managers and Users.
- [EFP Emergency Response](https://docs.efp.app/production/emergency-response): Outlines procedures for responding to bugs in EFP contracts and managing affected data.
- [Ethereum Follow Protocol Overview](https://docs.efp.app/intro): Explains the Ethereum Follow Protocol, its roles, and functionality for managing social graphs on Ethereum.
- [EFP Multisig Overview](https://docs.efp.app/production/multisig): This page provides information about the EFP multisig wallet, its addresses, signers, and contract privileges.
- [API Documentation Redirect](https://docs.efp.app/api/): Redirects users to the API documentation for the Eth Identity Kit.
- [Ethereum Follow Protocol Overview](https://docs.efp.app/): Explains the Ethereum Follow Protocol for creating and managing on-chain social graphs using NFTs.
- [Account Metadata Overview](https://docs.efp.app/design/account-metadata): Explains how to use Account Metadata for Ethereum accounts in the EFP ecosystem.

## Code Repositories

- [EFP App](https://github.com/ethereumfollowprotocol/app): Ethereum Follow Protocol Web App
- [EFP Docs](https://github.com/ethereumfollowprotocol/docs): Ethereum Follow Protocol Documentation
- [EFP API](https://github.com/ethereumfollowprotocol/api): Ethereum Follow Protocol Public API
- [EFP Services](https://github.com/ethereumfollowprotocol/services): Ethereum Follow Protocol Services
- [EFP Indexer](https://github.com/ethereumfollowprotocol/indexer): Ethereum Follow Protocol Indexer
- [EFP Notification Service](https://github.com/ethereumfollowprotocol/notification-service): EFP notifications served piping hot over websocket
- [EFP Follow-bot](https://github.com/ethereumfollowprotocol/follow-bot): A telegram bot for subscribing to EFP account activity
- [EFP Contracts](https://github.com/ethereumfollowprotocol/contracts): Core smart contracts of Ethereum Follow Protocol
- [EFP Replay](https://github.com/ethereumfollowprotocol/replay): EFP Historical Event Recovery
- [EFP Onchain](https://github.com/ethereumfollowprotocol/onchain): Tools and example scripts for recovering EFP data onchain

## Additional Links

- [EFP Creation Proposal](https://x.com/BrantlyMillegan/status/1648794925754974209): High level proposal for the creation of Ethereum Follow Protocol
- [The Path to Web3 Identity](https://mirror.xyz/brantly.eth/7nJZCqyvhbdTIfq4oSnNEjlUUyxS9sf3pTHcBNi8Te8): Outlines the "Web3 Identity Stack", the challenges of building it and what to build next

---

# ethidentitykit.com llms.txt

> Ethereum Identity Kit facilitates the integration of Ethereum identity features into applications via a React component library, providing developers with tools and documentation for user profile management and on-chain transactions.

## Components

- [followers-you-know](https://docs.efp.app/followers-you-know): The Followers you know component displays a list of common followers between two Ethereum addresses or ENS names, showing their avatars and names.
- [profile-socials](https://docs.efp.app/profile-socials): The Profile Socials component displays the social links of a user, including URLs and decentralized web links.
- [transaction-modal](https://docs.efp.app/transaction-modal): The Transaction Modal component allows users to initiate and manage on-chain transactions. It provides a user interface for viewing transaction details, selecting chains, and managing transaction batches.
- [avatar](https://docs.efp.app/avatar): The Avatar component displays an avatar image for a given Ethereum address or ENS name, with support for fallback images.
- [profile-stats](https://docs.efp.app/profile-stats): The Profile Stats component displays follower and following statistics for a given Ethereum address or ENS name.
- [follower-tag](https://docs.efp.app/follower-tag): The Follower Tag component displays the relationship status between a given Ethereum address and the connected user, such as whether the user follows, blocks, or mutes the address.
- [full-width-profile](https://docs.efp.app/full-width-profile): The Full Width Profile component displays a comprehensive Ethereum Profile with ENS and EFP details.
- [follow-button](https://docs.efp.app/follow-button): The Follow Button component allows users to manage their social connection with another user. It displays the current relationship status between the `lookupAddress` and the `connectedAddress` and provides actions to change this state.
- [transaction-provider](https://docs.efp.app/transaction-provider): The Transaction Provider component supplies the necessary context for managing on-chain transactions within the application.
- [profile-card](https://docs.efp.app/profile-card): The Profile Card component displays a user's ENS and EFP details.

## Functions

- [list-ops](https://docs.efp.app/list-ops): The list operations module provides utility functions for creating list operations in the EFP (Ethereum Follow Protocol) system.
- [transactions](https://docs.efp.app/transactions): The transactions module provides utility functions for handling EFP (Ethereum Follow Protocol) list operations and transactions.
- [validity](https://docs.efp.app/validity): The validity module provides utility functions for validating various types of data in the application.
- [list-storage-location](https://docs.efp.app/list-storage-location): The list storage location module provides functionality to retrieve the storage location of an EFP list from the list registry contract.
- [formatters](https://docs.efp.app/formatters): The formatters module provides utility functions for formatting various types of data in the application.
- [profile](https://docs.efp.app/profile): The profile module provides utility functions for handling profile-related operations.
- [generate-slot](https://docs.efp.app/generate-slot): The generateSlot utility generates a random storage slot value using keccak256 and the current timestamp.
- [fetch-followers-you-know](https://docs.efp.app/api/fetch-followers-you-know): Fetches the list of followers that you (connected address) follow, who also follow another address.
- [fetch-follow-state](https://docs.efp.app/api/fetch-follow-state): Fetches the follow state between two addresses or a list and an address.
- [fetch-profile-efp-poaps](https://docs.efp.app/api/fetch-profile-efp-poaps): Fetches EFP [POAPs (Proof of Attendance Protocol)](https://poap.xyz).
- [fetch-eth-price](https://docs.efp.app/api/fetch-eth-price): Fetches the current ETH price in USD from the CoinGecko API.
- [fetch-profile-details](https://docs.efp.app/api/fetch-profile-details): Fetches profile details for a given Ethereum address, ENS name, or list number.
- [fetch-profile-lists](https://docs.efp.app/api/fetch-profile-lists): Fetches all lists associated with a given address or ENS name.
- [fetch-profile-stats](https://docs.efp.app/api/fetch-profile-stats): Fetches profile statistics (followers and following counts) for a given address, ENS name, or list.
- [fetch-account](https://docs.efp.app/api/fetch-account): Fetches condensed account information for a given address, ENS name, or list.
- [fetch-recommended](https://docs.efp.app/api/fetch-recommended): Fetches recommended profiles or recent activity from the EFP API, with optional pagination.
- [fetch-all-followers-you-know](https://docs.efp.app/api/fetch-all-followers-you-know): Fetches a paginated list of followers that you (connected address) follow, who also follow another address, with optional search functionality.

## Hooks

- [useFollowButton](https://docs.efp.app/useFollowButton): The `useFollowButton` hook manages the state and actions for a follow button component.
- [useProfileDetails](https://docs.efp.app/useProfileDetails): The `useProfileDetails` hook fetches and manages the profile details for a given Ethereum address or ENS name, including ENS data and primary list information.
- [useFollowingState](https://docs.efp.app/useFollowingState): The `useFollowingState` hook fetches and manages the following state between a given Ethereum address or ENS name and the connected user, indicating if the user follows, blocks, or mutes the address.
- [useFollowerState](https://docs.efp.app/useFollowerState): The `useFollowerState` hook fetches and manages the follower state between a given Ethereum address or ENS name and the connected user, indicating if the user is followed, blocked, or muted by the address.
- [useProfileStats](https://docs.efp.app/useProfileStats): The `useProfileStats` hook fetches and manages the follower and following statistics for a given Ethereum address or ENS name.
- [useTransactions](https://docs.efp.app/useTransactions): The `useTransactions` hook provides access to the transaction context, allowing components to manage and interact with on-chain transactions.
- [Interpreting EFP Data](https://docs.efp.app/interpreting-state): Interpreting EFP Data 
- [EFP Railway Template](https://docs.efp.app/efp-silo): Deploying the EFP Railway Template  
- [EFP Infrastructure](https://docs.efp.app/infra): EFP Infrastructure 

## API

- [Discover](https://docs.efp.app/discover): Get recently active accounts to follow.
- [Metadata](https://docs.efp.app/token/metadata): Get NFT metadata for a specified token id 
- [Image](https://docs.efp.app/token/image): Get NFT image for a specified token id
- [Stats](https://docs.efp.app/stats): Get global EFP statistics.
- [Export State](https://docs.efp.app/export-state): Get all accounts that are being followed by EFP list id, excludes blocks and mutes 
- [Recommended](https://docs.efp.app/lists/recommended): Get recommended users for a user by their EFP list id.
- [Latest Followers](https://docs.efp.app/lists/latestFollowers): Get the latest followers (excluding blocked and muted) of a user by their EFP list id.
- [Stats](https://docs.efp.app/lists/stats): Get stats of a user by their EFP list id.
- [Details](https://docs.efp.app/lists/details): Get details of a user by their EFP list id.
- [Account](https://docs.efp.app/lists/account): Get account information by their EFP list id 
- [All Following Addresses](https://docs.efp.app/lists/allFollowingAddresses): Get all accounts in list format, that are being followed (including blocked and muted) by a user by their EFP list id.
- [Search Followers](https://docs.efp.app/lists/searchFollowers): Search for followers of a user by their EFP list id.
- [Poap Badges](https://docs.efp.app/lists/badges): Get EFP POAPs of a user by their EFP list id.
- [Search Following](https://docs.efp.app/lists/searchFollowing): Search for following of a user by their EFP list id.
- [All Followers](https://docs.efp.app/lists/allFollowers): Get all followers (including blocked and muted) of a user by their EFP list id.
- [Tagged As](https://docs.efp.app/lists/taggedAs): Get the tags that are applied to a user by their EFP list id.
- [Tags](https://docs.efp.app/lists/tags): Get the tags of a user by their EFP list id.
- [Button State](https://docs.efp.app/lists/buttonState): Get the following state between a given list and a given user.
- [Following](https://docs.efp.app/lists/following): Get accounts being followed (excluding blocked and muted) by a user by their EFP list id.
- [All Following](https://docs.efp.app/lists/allFollowing): Get all accounts being followed (including blocked and muted) by a user by their EFP list id.
- [Follower State](https://docs.efp.app/lists/followerState): Get the follower state between a given list and a given user.
- [Followers](https://docs.efp.app/lists/followers): Get followers (excluding blocked and muted) of a user by their EFP list id.
- [List Records](https://docs.efp.app/users/listRecords): Get the list records of a user by their address or ENS name.
- [Recommended](https://docs.efp.app/users/recommended): Get recommended users for a user by their address or ENS name.
- [Lists](https://docs.efp.app/users/lists): Get the lists of a user by their address or ENS name.
- [Latest Followers](https://docs.efp.app/users/latestFollowers): Get a user's latest followers by Address or ENS Name  
- [Notifications](https://docs.efp.app/users/notifications): Get incoming actions received from other users by Address or ENS Name  
- [Stats](https://docs.efp.app/users/stats): Get stats of a user by their address or ENS name.
- [Details](https://docs.efp.app/users/details): Get account details, populates most of the data on a profile card  
- [Common Followers](https://docs.efp.app/users/commonFollowers): Get common followers that are shared by two accounts  
- [QR Code](https://docs.efp.app/users/qr): Get a QR code that links to a user's profile page.
- [Account](https://docs.efp.app/users/account): Get account information by Address or ENS Name  
- [Search Followers](https://docs.efp.app/users/searchFollowers): Search for followers of a user by their address or ENS name.
- [Poap Badges](https://docs.efp.app/users/badges): Get EFP POAPs of a user by their address or ENS name.
- [Primary List](https://docs.efp.app/users/primaryList): Get the primary list of a user by their address or ENS name.
- [Search Following](https://docs.efp.app/users/searchFollowing): Search for following of a user by their address or ENS name.
- [ENS](https://docs.efp.app/users/ens): Get the ENS data of a user by their address or ENS name.
- [Tagged As](https://docs.efp.app/users/taggedAs): Get the tags that are applied to a user by their address or ENS name.
- [Tags](https://docs.efp.app/users/tags): Get the tags of a user by their address or ENS name.
- [Following](https://docs.efp.app/users/following): Get following by Address or ENS Name 
- [Follower State](https://docs.efp.app/users/followerState): Get the follower state between two users.
- [Followers](https://docs.efp.app/users/followers): Get followers by Address or ENS Name  
- [Introduction](https://docs.efp.app/index): EFP provides an open source indexer and API for indexing and retrieving EFP data.
- [Blocked](https://docs.efp.app/leaderboard/blocked): Get leaderboard of users ranked according to count of users that blocked them.
- [All](https://docs.efp.app/leaderboard/all): Get addresses and ens names of all leaderboard records.
- [Ranked](https://docs.efp.app/leaderboard/ranked): Get leaderboard of users ranked according to count of mutual follows.
- [Search](https://docs.efp.app/leaderboard/search): Search for leaderboard addresses and ENS names by a specified search term.
- [Muted](https://docs.efp.app/leaderboard/muted): Get leaderboard of users ranked according to count of users that muted them.
- [Count](https://docs.efp.app/leaderboard/count): Get count of all accounts in the leaderboard.
- [Mutes](https://docs.efp.app/leaderboard/mutes): Get leaderboard of users ranked according to count of users that they muted.
- [Following](https://docs.efp.app/leaderboard/following): Get leaderboard of users ranked according to following counts.
- [Blocks](https://docs.efp.app/leaderboard/blocks): Get leaderboard of users ranked according to count of users that they blocked.
- [Followers](https://docs.efp.app/leaderboard/followers): Get leaderboard of users ranked according to follower counts.

---

# docs.ens.domains llms.txt

> The Ethereum Name Service (ENS) is a distributed, open, and extensible naming system based on the Ethereum blockchain. ENS maps human-readable names like 'alice.eth' to machine-readable identifiers such as Ethereum addresses, other cryptocurrency addresses, content hashes, metadata, and more. 

## General

- [faq](https://docs.ens.domains/faq): Frequently Asked Questions about the Ethereum Name Service
- [dweb-intro](https://docs.ens.domains/dweb/intro): The ContentHash is a very popular component of an ENS name, first introduced in [ENSIP-7](/ensip/7).
- [ensip-index](https://docs.ens.domains/ensip/index): This page contains a summary of all the ENS Improvement Proposals (ENSIPs) that have been proposed, and their current status.
- [bugs](https://docs.ens.domains/bugs): The ENS bug bounty program rewards anyone who finds a bug in covered ENS smart contracts and ENS Labs assets.
- [terminology](https://docs.ens.domains/terminology): A technical overview of all the terminology used in the ENS documentation.
- [contracts-index](https://docs.ens.domains/contracts/index): The Ethereum Name Service Smart Contracts Overview
- [dns-tlds](https://docs.ens.domains/dns/tlds): Alongside the `.eth` Top Level Domain, the ENS Protocol also supports most of your favourite DNS Top Level Domains (such as `.com`, `.cash` or `.domains`).
- [changelog](https://docs.ens.domains/changelog): This page contains a list of changes and events that happened to the ENS protocol & ecosystem.
- [ens-discussion](https://discuss.ens.domains/) Ethereum Name Service Discussion Board

## Registry

- [registry-reverse](https://docs.ens.domains/registry/reverse): Reverse resolution in ENS - the process of mapping from an Ethereum address (eg, 0x1234.
- [registry-dns](https://docs.ens.domains/registry/dns): Registrar responsible for all DNSSEC enabled names
- [registry-eth](https://docs.ens.domains/registry/eth): The ETH Registrar is a special registrar.
- [registry-ens](https://docs.ens.domains/registry/ens): The ENS registry is the core contract that lies at the heart of ENS resolution.

## Wrapper

- [wrapper-creating-subname-registrar](https://docs.ens.domains/wrapper/creating-subname-registrar): In the [Use Cases](/wrapper/usecases#sell-or-rent-subnames) section, we talked about the ability to stand up your own "registrar" to allow other people to register/claim subnames automatically.
- [wrapper-fuses](https://docs.ens.domains/wrapper/fuses): A "fuse" is a permission or perk that can be granted/revoked on a name.
- [wrapper-expiry](https://docs.ens.domains/wrapper/expiry): In order to burn any fuses on a name, you must also set an **expiry** on it.
- [wrapper-usecases](https://docs.ens.domains/wrapper/usecases): By default, newly registered names will use the Public Resolver, which just allows the current manager/controller of the name to update any records.
- [wrapper-contracts](https://docs.ens.domains/wrapper/contracts): The Name Wrapper contract is deployed on these chains:
- [wrapper-states](https://docs.ens.domains/wrapper/states): Wrapper States
- [wrapper-overview](https://docs.ens.domains/wrapper/overview): The **Name Wrapper** is a contract for ENS that allows you to "wrap" any ENS name into a ERC-1155 NFT.

## Resolvers

- [resolvers-quickstart](https://docs.ens.domains/resolvers/quickstart): A quickstart guide to everything about resolvers.
- [resolvers-public](https://docs.ens.domains/resolvers/public): A general purpose resolver that suits most user needs.
- [resolvers-writing](https://docs.ens.domains/resolvers/writing): Every ENS name has a resolver, which is responsible for resolving information about a name.
- [resolvers-universal](https://docs.ens.domains/resolvers/universal): The Universal Resolver is a contract that handles the work of resolving a name entirely onchain, making it possible to make a single smart contract call to resolve an ENS name.
- [resolvers-interfaces](https://docs.ens.domains/resolvers/interfaces): This page is a collection of methods that a resolver MAY implement.
- [resolvers-ccip-read](https://docs.ens.domains/resolvers/ccip-read): Learn about how CCIP Read enables Offchain ENS Resolvers, how a gateway works, trust assumptions, and more.
- [resolvers-interacting](https://docs.ens.domains/resolvers/interacting): Some apps may want to allow for users to edit, update, or modify their name and its behaviour at a more advanced level.

## Dao

- [dao-governance-moderator](https://docs.ens.domains/dao/governance/moderator): When the author of a Draft Proposal asks for it to be advanced to a vote, and you agree, follow the below steps:.
- [dao-governance-process](https://docs.ens.domains/dao/governance/process): This document is a suggested process for developing and advancing ENS Governance Proposals.
- [dao-stewards](https://docs.ens.domains/dao/stewards): The DAO is governed through a democratic process in which all major matters are decided through a vote open to all holders of governance tokens.
- [dao-wg-rules](https://docs.ens.domains/dao/wg/rules): _This document represents the current state of the Working Group Rules as created by [EP0.
- [dao-index](https://docs.ens.domains/dao/index): ENS Governance
- [dao-constitution](https://docs.ens.domains/dao/constitution): The ENS constitution is a set of binding rules that determine what governance actions are legitimate for the DAO to take.
- [dao-foundation](https://docs.ens.domains/dao/foundation): Having a legal entity that represents the DAO in the "real world" is valuable for a number of reasons:.
- [dao-token](https://docs.ens.domains/dao/token): ENS Airdropped tokens to anyone who held an ENS name on _October 31st, 2021_.
- [dao-security-council](https://docs.ens.domains/dao/security-council): The ENS DAO Security Council is a 4-of-8 multi-sig with a limited mandate: to cancel malicious proposals that threaten the DAO, particularly those that would compromise the treasury.
- [dao-proposals-submit](https://docs.ens.domains/dao/proposals/submit): There are three main types of governance proposals you can make:

## Dao Proposals

- [dao-proposals-0.1](https://docs.ens.domains/dao/proposals/0.1): 'Transfer ENS treasury and contract ownership from the ENS Multisig to ENS DAO.'
- [dao-proposals-0.2](https://docs.ens.domains/dao/proposals/0.2): 'Send 213,049 ENS tokens to a new airdrop contract for users who did not receive the 2x multiplier despite owning a name that was used as a primary ENS name. As amended by EP3.'
- [dao-proposals-0.3](https://docs.ens.domains/dao/proposals/0.3): 'Amend EP2 to include funds accidentally sent back to the $ENS token contract.'
- [dao-proposals-0.4](https://docs.ens.domains/dao/proposals/0.4): 'Creates four foundational working groups and establish rules related to the creation, management, and dissolution of working groups within the ENS DAO.'
- [dao-proposals-1.1](https://docs.ens.domains/dao/proposals/1.1): 'Increases the start price for the temporary premium added when names expire from $2,000 to $100,000.'
- [dao-proposals-1.2.1](https://docs.ens.domains/dao/proposals/1.2.1): 'The removal of Brantly Millegan as Director of The ENS Foundation (the "Foundation Company.").'
- [dao-proposals-1.2.2](https://docs.ens.domains/dao/proposals/1.2.2): 'This proposal is for the election of a new Director of the ENS Foundation.'
- [dao-proposals-1.3.1](https://docs.ens.domains/dao/proposals/1.3.1): 'Budget request for Meta-Governance Working Group'
- [dao-proposals-1.3.2](https://docs.ens.domains/dao/proposals/1.3.2): 'Budget request for ENS Ecosystem Working Group'
- [dao-proposals-1.3.3](https://docs.ens.domains/dao/proposals/1.3.3): 'Budget request for Community Working Group'
- [dao-proposals-1.3.4](https://docs.ens.domains/dao/proposals/1.3.4): 'Budget request for Public Goods Working Group'
- [dao-proposals-1.4](https://docs.ens.domains/dao/proposals/1.4): 'Proposes to reimburse True Names Limited for expenses incurred on behalf of ENS and the DAO.'
- [dao-proposals-1.5](https://docs.ens.domains/dao/proposals/1.5): 'Proposes to deploy Exponential Price Oracle Contract to replace the current Linear Price Oracle Contract'
- [dao-proposals-1.6](https://docs.ens.domains/dao/proposals/1.6): 'This proposal is for the funding and establishment of a community-run OIDC Identity Provider Server for Sign-In with Ethereum, maintained by Spruce.'
- [dao-proposals-1.7](https://docs.ens.domains/dao/proposals/1.7): 'Ens the $ENS airdrop and EP2 airdrop by transferring tokens and revoking approvals.'
- [dao-proposals-1.8](https://docs.ens.domains/dao/proposals/1.8): 'Proposes to repeal the working group rules passed in EP4 and replace those rules with the working group rules specified in this proposal.'
- [dao-proposals-1.9](https://docs.ens.domains/dao/proposals/1.9): 'This is a proposal for the ENS DAO to support the Protocol Guild Pilot, a vested split contract which directs funding to 110 Ethereum core protocol contributors over one year.'
- [dao-proposals-2.1](https://docs.ens.domains/dao/proposals/2.1): 'A proposal to fund TNL for continuing development and improvement of the ENS system.'
- [dao-proposals-2.2.1](https://docs.ens.domains/dao/proposals/2.2.1): 'Budget request for Meta-Governance Working Group'
- [dao-proposals-2.2.2](https://docs.ens.domains/dao/proposals/2.2.2): 'Budget request for Ecosystem Working Group'
- [dao-proposals-2.2.3](https://docs.ens.domains/dao/proposals/2.2.3): 'Budget request for Public Goods Working Group'
- [dao-proposals-2.2.4](https://docs.ens.domains/dao/proposals/2.2.4): 'RFP for an endowment fund manager'
- [dao-proposals-2.2.5](https://docs.ens.domains/dao/proposals/2.2.5): 'Selection of an ENS endowment fund manager'
- [dao-proposals-3.1.1](https://docs.ens.domains/dao/proposals/3.1.1): 'This is a proposal to request funding for the ENS Ecosystem Working Group for Q1/Q2 2023.'
- [dao-proposals-3.1.2](https://docs.ens.domains/dao/proposals/3.1.2): 'This is a proposal to request funding for the Meta-Governance Working Group for Q1/Q2 2023.'
- [dao-proposals-3.1.3](https://docs.ens.domains/dao/proposals/3.1.3): 'This is a proposal to request funding for the Public Goods Working Group for Q1/Q2 2023.'
- [dao-proposals-3.2](https://docs.ens.domains/dao/proposals/3.2): 'This proposal executes the funding requests for the ENS DAO Working Groups for the April 2023 funding window.'
- [dao-proposals-3.3](https://docs.ens.domains/dao/proposals/3.3): 'This proposal executes a swap of 10,000 ETH into USDC, to ensure ENS DAO has enough to cover operating expenses for 18 - 24 months.'
- [dao-proposals-3.4](https://docs.ens.domains/dao/proposals/3.4): 'The first tranche of the Endowment'
- [dao-proposals-3.5](https://docs.ens.domains/dao/proposals/3.5): 'This proposal will activate the new .eth controller and reverse registrar'
- [dao-proposals-3.6](https://docs.ens.domains/dao/proposals/3.6): 'Elect a new ENS Foundation director'
- [dao-proposals-3.7](https://docs.ens.domains/dao/proposals/3.7): 'ENS Normalization Standard'
- [dao-proposals-4.1](https://docs.ens.domains/dao/proposals/4.1): 'Additional actions and strategies for the Endowment'
- [dao-proposals-4.2](https://docs.ens.domains/dao/proposals/4.2): 'Fund the Endowment (second tranche)'
- [dao-proposals-4.3](https://docs.ens.domains/dao/proposals/4.3): 'Refund Invalid .eth Names'
- [dao-proposals-4.4.1](https://docs.ens.domains/dao/proposals/4.4.1): 'This proposal requests funding for the ENS Ecosystem Working Group.'
- [dao-proposals-4.4.2](https://docs.ens.domains/dao/proposals/4.4.2): 'This proposal requests funding for the ENS Meta-Goverance Working Group.'
- [dao-proposals-4.4.3](https://docs.ens.domains/dao/proposals/4.4.3): 'This proposal requests funding for the ENS Public Goods Working Group.'
- [dao-proposals-4.5](https://docs.ens.domains/dao/proposals/4.5): 'This proposal introduces new actions and strategies to the Endowment with the aim of enhancing diversification and adapting to current market conditions. Notable additions include ETH-neutral strategy.'
- [dao-proposals-4.6](https://docs.ens.domains/dao/proposals/4.6): 'This proposal executes all three Working Group funding requests for the October 2023 funding window.'
- [dao-proposals-4.7](https://docs.ens.domains/dao/proposals/4.7): 'This proposal creates a structure for electing new service providers for the DAO'
- [dao-proposals-4.8](https://docs.ens.domains/dao/proposals/4.8): 'This proposal amends the working group rules related to Steward term duration and compensation rules.'
- [dao-proposals-4.9](https://docs.ens.domains/dao/proposals/4.9): 'This proposal aims to select service providers following the approval of EP4.7, with a budget of $3,600,000 USDC annually to support providers that can enhance the ENS system.'
- [dao-proposals-4.10](https://docs.ens.domains/dao/proposals/4.10): 'This proposal transfers ownership of the ENS root key to the ENS DAO, aiming to further decentralize governance and enhance community trust and power in managing the ENS Protocol.'
- [dao-proposals-5.1](https://docs.ens.domains/dao/proposals/5.1): "Deploy a new version of the DNSSEC oracle and DNS registrar that enables 'gasless DNSSEC' functionality."
- [dao-proposals-5.2](https://docs.ens.domains/dao/proposals/5.2): 'This EP will initiate the Streams for Service Providers as selected on EP4.9'
- [dao-proposals-5.3](https://docs.ens.domains/dao/proposals/5.3): "Decide ENS Labs' next steps in the eth.link litigation, and consider reimbursement for ENS Labs' legal expenses in this case."
- [dao-proposals-5.4.1](https://docs.ens.domains/dao/proposals/5.4.1): 'This specification is the amount requested from the DAO treasury to the Metagov Multisig to fulfill anticipated budgetary needs through September 2024.'
- [dao-proposals-5.4.2](https://docs.ens.domains/dao/proposals/5.4.2): 'This specification is the amount requested from the DAO treasury to the Public Goods  Multisig to fulfill anticipated budgetary needs through September 2024.'
- [dao-proposals-5.5](https://docs.ens.domains/dao/proposals/5.5): 'This specification is the amount requested from the DAO treasury to the Public Goods Multisig to fulfill anticipated budgetary needs through September 2024.'
- [dao-proposals-5.6](https://docs.ens.domains/dao/proposals/5.6): 'This EP authorises metagov to withdraw 30 ETH from the endowment each month for fees, and reimburses metagov for 43.54 ETH in fees already incurred.'
- [dao-proposals-5.7](https://docs.ens.domains/dao/proposals/5.7): "This EP aims to safeguard the DAO by establishing a Security Council with a two-year, time-limited veto power to counter malicious proposals, ensuring the protocol's integrity and promoting decentralized governance."
- [dao-proposals-5.8](https://docs.ens.domains/dao/proposals/5.8): "This EP aims to safeguard the DAO by establishing a Security Council with a two-year, time-limited veto power to counter malicious proposals, ensuring the protocol's integrity and promoting decentralized governance."
- [dao-proposals-5.9](https://docs.ens.domains/dao/proposals/5.9): 'This proposal seeks to use the June 2024 funding window to request Q1/Q2 funding for the ENS Meta-Governance Working Group, following the failure of the March 2024 funding request, to cover operations until the next window in September 2024.'
- [dao-proposals-5.10](https://docs.ens.domains/dao/proposals/5.10): 'This proposal confirms the 8 individuals for the Security Council, as defined in EP5.7, to protect against governance attacks by canceling malicious proposals using the SecurityCouncil smart contract.'
- [dao-proposals-5.11](https://docs.ens.domains/dao/proposals/5.11): 'This proposal funds the Meta-Governance Working Group with 374k USDC and 150k ENS to support DAO-wide operations, including Working Groups, treasury management, and governance initiatives, as specified in EP 5.9 and amended by EP 5.8.'
- [dao-proposals-5.12](https://docs.ens.domains/dao/proposals/5.12): 'This proposal aims to roll out an updated version of the Zodiac Roles Modifier module. The new version improves usability and transparency of treasury management operations. Upon approval, the Roles Modifier v2 module will be activated. Furthermore, this proposal requests authorization from the DAO to revise the permissions policy.'
- [dao-proposals-5.13](https://docs.ens.domains/dao/proposals/5.13): 'This proposal aims to establish a Security Council for the ENS DAO with the authority to veto malicious proposals, with a built-in expiration mechanism to prevent centralized control and ensure greater delegation and governance distribution over time.'
- [dao-proposals-5.14](https://docs.ens.domains/dao/proposals/5.14): 'This proposal aims to introduce new permissions for deploying Endowment funds, focusing on improved diversification and alignment with the evolving market landscape and liquidity.'
- [dao-proposals-5.15](https://docs.ens.domains/dao/proposals/5.15): 'Agora proposes adding the functionality of the ProposalBond to the ENS DAO Governor that would allow a proposer to propose with a lower threshold.'
- [dao-proposals-5.16](https://docs.ens.domains/dao/proposals/5.16): 'This executable proposal seeks to implement the reimbursement payment to ENS Labs for the legal fees incurred while pursuing litigation to protect the eth.link domain.'
- [dao-proposals-5.17.1](https://docs.ens.domains/dao/proposals/5.17.1): 'This social proposal requests $254k USDC for operations through April 2025, covering compensation, tools, and resources for governance.'
- [dao-proposals-5.17.2](https://docs.ens.domains/dao/proposals/5.17.2): 'This social proposal requests $836k USDC for ecosystem initiatives, including grants, hackathons, and partnerships.'
- [dao-proposals-5.17.3](https://docs.ens.domains/dao/proposals/5.17.3): 'This social proposal requests $236k USDC for grants, events, hackathons, and bounties supporting Web3 infrastructure'
- [dao-proposals-5.18](https://docs.ens.domains/dao/proposals/5.18): "This proposal outlines the ENS DAO's steward compensation structure for Term 6, detailing monthly USDC payments for various roles, a new $ENS token distribution tied to annual USDC compensation, and terms for DAO approval."
- [dao-proposals-5.19](https://docs.ens.domains/dao/proposals/5.19): "This proposal outlines a pilot program to distribute ENS governance tokens to eligible contributors receiving grants, bounties, or payments from the DAO, aiming to engage them in governance by issuing tokens according to a quadratic distribution model, with the program's budget to be determined by a ranked choice vote."
- [dao-proposals-5.20](https://docs.ens.domains/dao/proposals/5.20): 'This proposal introduces an Investment Policy Statement (IPS) for the ENS Endowment to clarify investment principles, roles, and performance standards, with adjustments based on community feedback to include a more conservative asset allocation and regular income transfers for sustainable growth.'
- [dao-proposals-5.21](https://docs.ens.domains/dao/proposals/5.21): This proposal seeks to compensate the blockful team with 100k USDC and 15k vested ENS tokens for their extensive efforts in identifying and mitigating a critical vulnerability in ENS DAO's governance structure, which included developing the Security Council and enhancing long-term DAO security.
- [dao-proposals-5.22](https://docs.ens.domains/dao/proposals/5.22): 'This proposal seeks to implement the revised budget stream to ENS Labs to develop, maintain and audit ENSv2.'
- [dao-proposals-5.23](https://docs.ens.domains/dao/proposals/5.23): "This proposal aims to compensate the blockful team for their work in identifying, analyzing, reporting and mitigating a severe vulnerability in ENS DAO's governance structure."
- [dao-proposals-5.24](https://docs.ens.domains/dao/proposals/5.24): 'This proposal executes all three Working Group funding requests for the October 2024 funding window.'
- [dao-proposals-5.25](https://docs.ens.domains/dao/proposals/5.25): 'This is a resubmission of EP 5.24, with no changes to the funding amounts or technical specifications.'
- [dao-proposals-5.26](https://docs.ens.domains/dao/proposals/5.26): 'This executable proposal implements the Governance Distribution Pilot Program approved in EP5.19.'
- [dao-proposals-5.27](https://docs.ens.domains/dao/proposals/5.27): "Revokes the DAO's ability to upgrade the name wrapper"
- [dao-proposals-5.28](https://docs.ens.domains/dao/proposals/5.28): 'Reimburse eth.limo for ongoing legal fees.'
- [dao-proposals-5.29](https://docs.ens.domains/dao/proposals/5.29): 'Fund Unruggable to build and operate a network of gateways supporting the rollout of ENSIP 19.'
- [dao-proposals-6.1](https://docs.ens.domains/dao/proposals/6.1): 'Convert 6,000 ETH to USDC for DAO Operating Expenses.'
- [dao-proposals-6.2](https://docs.ens.domains/dao/proposals/6.2): 'Expand the Endowment by funding a third tranche of 5,000 ETH.'
- [dao-proposals-6.3](https://docs.ens.domains/dao/proposals/6.3): 'This vote intends to be a DAO check on whether to renew the service provider program and if so, under what budget.'
- [dao-proposals-6.4](https://docs.ens.domains/dao/proposals/6.4): 'This is a proposed amendment to EP 6.3.'
- [dao-proposals-6.5](https://docs.ens.domains/dao/proposals/6.5): 'This is a counter-proposal to EP 6.4.'
- [dao-proposals-6.6.1](https://docs.ens.domains/dao/proposals/6.6.1): 'This specification is the amount requested from the DAO treasury to the Metagov Multisig to fulfill anticipated budgetary needs through the next formal funding window in October 2025.'
- [dao-proposals-6.6.2](https://docs.ens.domains/dao/proposals/6.6.2): 'This specification is the amount requested from the DAO treasury to the Public Goods Multisig to fulfill anticipated budgetary needs through the next formal funding window in October 2025.'
- [dao-proposals-6.7](https://docs.ens.domains/dao/proposals/6.7): 'Transfer ownership of the .ceo top-level domain to the DNSSEC registrar'
- [dao-proposals-6.8](https://docs.ens.domains/dao/proposals/6.8): 'Revoke root controller role from legacy ENS multisig'

## ENSIP

- [index](https://docs.ens.domains/ensip/index): This page contains a summary of all the ENS Improvement Proposals (ENSIPs) that have been proposed, and their current status.
- [ensip-1](https://docs.ens.domains/ensip/1): Documentation of the basic ENS protocol (formerly EIP-137)
- [ensip-2](https://docs.ens.domains/ensip/2): Describes the hash registrar initially used to register ENS .eth domains (formerly EIP-162).
- [ensip-3](https://docs.ens.domains/ensip/3): Specifies a TLD, registrar, and resolver interface for reverse resolution of Ethereum addresses using ENS (formerly EIP-181).
- [ensip-4](https://docs.ens.domains/ensip/4): A mechanism for storing ABI definitions in ENS, for easy lookup of contract interfaces by callers (formerly EIP-205).
- [ensip-5](https://docs.ens.domains/ensip/5): A standard for storage of text records in ENS (formerly EIP-634).
- [ensip-6](https://docs.ens.domains/ensip/6): Defines a resolver profile for ENS that provides features for storage and lookup of DNS records (formerly EIP-1185).
- [ensip-7](https://docs.ens.domains/ensip/7): Introduces a field for storing content addresses and hashes in ENS (formerly EIP-1577).
- [ensip-8](https://docs.ens.domains/ensip/8): Defines a method of associating contract interfaces with ENS names and addresses, and of discovering those interfaces (formerly EIP-1844).
- [ensip-9](https://docs.ens.domains/ensip/9): Introduces new overloads for the addr field for ENS resolvers, which permit resolution of addresses for other blockchains via ENS (formerly EIP-2304).
- [ensip-10](https://docs.ens.domains/ensip/10): Provides a mechanism to support wildcard resolution of ENS names (formerly EIP-2544).
- [ensip-11](https://docs.ens.domains/ensip/11): Introduces coinType for EVM compatible chains (amending ENSIP9).
- [ensip-12](https://docs.ens.domains/ensip/12): A standard for storage of the avatar text record in ENS.
- [ensip-13](https://docs.ens.domains/ensip/13): Using ENS Text Records to facilitate safer and more convenient signing operations.
- [ensip-14](https://docs.ens.domains/ensip/14): Using the reveal secret as a way to have on chain information about the source of the registration
- [ensip-15](https://docs.ens.domains/ensip/15): A standard for storage of the avatar text record in ENS.
- [ensip-16](https://docs.ens.domains/ensip/16): Allows metadata to be queried on EIP-3668 enabled names
- [ensip-17](https://docs.ens.domains/ensip/17): A standard for gasless DNS resolution in ENS.
- [ensip-18](https://docs.ens.domains/ensip/18): A standard for profile information as text records in ENS
- [ensip-19](https://docs.ens.domains/ensip/19): Specifies reverse resolution in a cross-chain context
- [ensip-20](https://docs.ens.domains/ensip/20): A standardized implementation for managing offchain domains using an External Resolver
- [ensip-21](https://docs.ens.domains/ensip/21): Batch Gateway Protocol

## Web

- [web-quickstart](https://docs.ens.domains/web/quickstart): Hey there 👋, this is the quickstart guide.
- [web-subdomains](https://docs.ens.domains/web/subdomains): Issue subdomains to your users, yourself, or your friends. Program your own resolver, or use one of the many existing ones.
- [web-reverse](https://docs.ens.domains/web/reverse): To lookup the name of an address we use a reverse resolution. This allows users to indicate a primary name.
- [web-avatars](https://docs.ens.domains/web/avatars): The Avatar record is a special record that allows for user profile pictures to be stored on ENS.
- [web-enumerate](https://docs.ens.domains/web/enumerate): List all names a user has, owns, or might have access to.
- [web-siwe](https://docs.ens.domains/web/siwe): The SIWE Specification is rather simple.
- [web-naming-contracts](https://docs.ens.domains/web/naming-contracts): While it's commonly known that regular user accounts can have [primary names](/web/reverse), it's less known that smart contracts can also have names.
- [web-index](https://docs.ens.domains/web/index): This section walks you through how to leverage the ENS open standards to improve the user experience of your app.
- [web-design](https://docs.ens.domains/web/design): ENS is a tool to simplify the experience for your users by making blockchain addresses human-readable.
- [web-resolution](https://docs.ens.domains/web/resolution): The ENS Protocol aims to make it easy to use Ethereum.
- [web-subgraph](https://docs.ens.domains/web/subgraph): The ENS subgraph
- [web-libraries](https://docs.ens.domains/web/libraries): There are a few plug-and-play kits that you can use to jumpstart your project.
- [web-records](https://docs.ens.domains/web/records): Store & Retrieve information from Profiles
- [web-multichain](https://docs.ens.domains/web/multichain): The ENS Labs team recently announced our plans and roadmap for scaling ENS to the entire internet and beyond.

## Resolution

- [resolution-index](https://docs.ens.domains/resolution/index): The process by which we load information about a name is called resolution.
- [resolution-names](https://docs.ens.domains/resolution/names): When interacting with the ENS smart contracts directly, it is important to note that names are not stored as strings.

## Learn

- [learn-dns](https://docs.ens.domains/learn/dns): The Ethereum Name Service is so much more than just .eth names. It is a general-purpose naming system that can be used for any kind of name. This includes DNS names. 
- [learn-protocol](https://docs.ens.domains/learn/protocol): Learn about the Ethereum Name Service (ENS) protocol and how it enables decentralized naming on the Ethereum blockchain.
- [learn-resolution](https://docs.ens.domains/learn/resolution): This document aims to provide a brief overview of how resolution works.
- [learn-deployments](https://docs.ens.domains/learn/deployments): ENS is multichain, but it all starts with Ethereum Mainnet. This page contains common addresses for ENS contracts.
- [learn-ccip-read](https://docs.ens.domains/learn/ccip-read): Using CCIP Read to take ENS resolution cross-chain, off-chain, and more.

## Github repositories

- [ens](https://github.com/ensdomains/ens): Implementations for ENS core functionality: The registry, registrars, and public resolvers.
- [ensjs-v2](https://github.com/ensdomains/ensjs-v2): Javascript bindings for the Ethereum Name Service
- [ens-manager](https://github.com/ensdomains/ens-manager): No description available
- [dnssec-oracle](https://github.com/ensdomains/dnssec-oracle): A DNSSEC oracle for Ethereum
- [solsha1](https://github.com/ensdomains/solsha1): Pure-solidity implementation of the SHA1 hash function.
- [subdomain-registrar](https://github.com/ensdomains/subdomain-registrar): A registrar that sells subdomains to users on behalf of their owners
- [dnsregistrar](https://github.com/ensdomains/dnsregistrar): DNS registrar for ENS
- [blacklist](https://github.com/ensdomains/blacklist): Blacklisting tools for ENS
- [ens-validation](https://github.com/ensdomains/ens-validation): No description available
- [ens-app](https://github.com/ensdomains/ens-app): Legacy ENS manager app
- [research](https://github.com/ensdomains/research): ENS relevant research.
- [court](https://github.com/ensdomains/court): Basic smart contracts for the arbitration processes.
- [dnsprovejs](https://github.com/ensdomains/dnsprovejs): A tool to convince an Ethereum DNSSEC oracle of the contents of DNS records
- [punycode](https://github.com/ensdomains/punycode): No description available
- [ens.domains](https://github.com/ensdomains/ens.domains): No description available
- [hack.ens.domains](https://github.com/ensdomains/hack.ens.domains): No description available
- [hack2018](https://github.com/ensdomains/hack2018): No description available
- [buffer](https://github.com/ensdomains/buffer): A library for working with mutable byte buffers in Solidity.
- [ethregistrar](https://github.com/ensdomains/ethregistrar): No description available
- [ganache-core](https://github.com/ensdomains/ganache-core): Core code for ganache
- [dnssectool](https://github.com/ensdomains/dnssectool): No description available
- [CurveArithmetics](https://github.com/ensdomains/CurveArithmetics): Contracts to implement custom EC cryptography in Solidity
- [resolvers](https://github.com/ensdomains/resolvers): A collection of resolvers for ENS domains
- [root](https://github.com/ensdomains/root): New ENS root contract
- [optimistic-dnssec](https://github.com/ensdomains/optimistic-dnssec): Optimistic Implementation of the DNSSEC Registrar
- [auction](https://github.com/ensdomains/auction): An auction contract for a one-off vickery style auction of 3-6 character names
- [ens-subgraph](https://github.com/ensdomains/ens-subgraph): ENS data source for The Graph
- [usd-oracle](https://github.com/ensdomains/usd-oracle): USD oracle research
- [melon-mail](https://github.com/ensdomains/melon-mail): Secure and decentralized messaging system built on top of Ethereum and IPFS
- [k-ens](https://github.com/ensdomains/k-ens): ENS formally verified
- [test-utils](https://github.com/ensdomains/test-utils): ENS test utilities
- [docs](https://github.com/ensdomains/docs): Documentation for the ENS protocol
- [hackathon-registrar](https://github.com/ensdomains/hackathon-registrar): A simple ENS registrar for Hackathons
- [get-trust-anchor](https://github.com/ensdomains/get-trust-anchor): Tool for fetching/refreshing DNS Root Zone trust anchors
- [hackathon-registrar-app](https://github.com/ensdomains/hackathon-registrar-app): No description available
- [name-reservations](https://github.com/ensdomains/name-reservations): Repository for 3-6 character name reservations in .eth.
- [ui](https://github.com/ensdomains/ui): UI components and reusable functions
- [short-name-claims-app](https://github.com/ensdomains/short-name-claims-app): A webapp for submitting claims for ENS short names (3-6 characters)
- [short-name-claims-subgraph](https://github.com/ensdomains/short-name-claims-subgraph): A subgraph for indexing ENS .eth short name claims
- [mock](https://github.com/ensdomains/mock): Module for mocking ENS locally
- [react-ens-address](https://github.com/ensdomains/react-ens-address): React Component to resolve ENS names or reverse resolve addresses
- [enscluster](https://github.com/ensdomains/enscluster): Config files for the ensdomains Kubernetes clusters
- [address-encoder](https://github.com/ensdomains/address-encoder): Encodes and decodes address formats for various cryptocurrencies
- [migration-scripts](https://github.com/ensdomains/migration-scripts): No description available
- [crypto-addr-serialize](https://github.com/ensdomains/crypto-addr-serialize): Encode/Decode various cryptocurrency addresses
- [renewal](https://github.com/ensdomains/renewal): No description available
- [renewal-widget](https://github.com/ensdomains/renewal-widget): ENS Renewal widget displays a popup window if there are any expiring ENS names.
- [ensdomains-landing](https://github.com/ensdomains/ensdomains-landing): ENS Homepage V2, the main homepage of the ENS protocol.
- [ens-reclaim-deposit-subgraph](https://github.com/ensdomains/ens-reclaim-deposit-subgraph): No description available
- [reclaim](https://github.com/ensdomains/reclaim): No description available
- [my-ens-app](https://github.com/ensdomains/my-ens-app): No description available
- [content-hash](https://github.com/ensdomains/content-hash): simple tool to encode/decode content hash for EIP 1577 compliant ENS Resolvers
- [l2gateway-demo](https://github.com/ensdomains/l2gateway-demo): A simple demonstration of a proposed L2 gateway specification
- [ens-archived-contracts](https://github.com/ensdomains/ens-archived-contracts): Collection of compiled ENS smart contracts
- [dnssec-oracle-anchors](https://github.com/ensdomains/dnssec-oracle-anchors): No description available
- [name-wrapper](https://github.com/ensdomains/name-wrapper): No description available
- [ethlink-request](https://github.com/ensdomains/ethlink-request): It fetches newly created subdomain and send request to eth.link to add to the DoH proxy
- [ens-twitter-api](https://github.com/ensdomains/ens-twitter-api): No description available
- [dnssecoraclejs](https://github.com/ensdomains/dnssecoraclejs): TypeScript/JavaScript library for generating DNSSEC proofs for the ENS DNSSEC oracle contract
- [reverse-records](https://github.com/ensdomains/reverse-records): No description available
- [tldclaims](https://github.com/ensdomains/tldclaims): No description available
- [ens-contracts](https://github.com/ensdomains/ens-contracts): The core contracts of the ENS protocol 
- [web3modal](https://github.com/ensdomains/web3modal): A single Web3 / Ethereum provider solution for all Wallets
- [ens-metadata-service](https://github.com/ensdomains/ens-metadata-service): No description available
- [eth-ens-namehash](https://github.com/ensdomains/eth-ens-namehash): A javascript module for generating ENS namehashes per spec https://github.com/ethereum/EIPs/issues/137
- [graph-node](https://github.com/ensdomains/graph-node): Graph Node indexes data from blockchains such as Ethereum and serves it over GraphQL
- [governance-contracts](https://github.com/ensdomains/governance-contracts): Governance contracts for the ENS DAO 
- [governance-web-react](https://github.com/ensdomains/governance-web-react): No description available
- [learn-docs](https://github.com/ensdomains/learn-docs): Documentation for learning about ENS domains
- [cypress-metamask](https://github.com/ensdomains/cypress-metamask): No description available
- [governance-docs](https://github.com/ensdomains/governance-docs): Governance documentation for the ENS DAO
- [boardroom](https://github.com/ensdomains/boardroom): Information about protocols
- [f1rewall](https://github.com/ensdomains/f1rewall): The opensource Discord invite gateway for your community!
- [verify-ratification](https://github.com/ensdomains/verify-ratification): Code to verify the votes ratifying the ENS constitution
- [offchain-resolver](https://github.com/ensdomains/offchain-resolver): No description available
- [thorin](https://github.com/ensdomains/thorin): A web3 native design system.
- [pm](https://github.com/ensdomains/pm): an place to hold ENS project issues which cannot be assigned to any existing repos
- [ens-app-v3](https://github.com/ensdomains/ens-app-v3): The official ENS manager app. Register and manage your ENS names here. 
- [ens-avatar](https://github.com/ensdomains/ens-avatar): ENS Avatar resolver library for both nodejs and browser.
- [ensjs](https://github.com/ensdomains/ensjs): ENS JavaScript library for contract interaction
- [unicode-confusables](https://github.com/ensdomains/unicode-confusables): Utility for finding confusing unicode
- [media-kit](https://github.com/ensdomains/media-kit): ens media kit resources
- [constitution-book-claim](https://github.com/ensdomains/constitution-book-claim): ENS DAO constitution book claim site
- [dao-pm](https://github.com/ensdomains/dao-pm): Project management repository for the ENS DAO
- [rasterize-gcp](https://github.com/ensdomains/rasterize-gcp): ENS NFT Rasterization Service
- [ens-cfw](https://github.com/ensdomains/ens-cfw): No description available
- [ens-print](https://github.com/ensdomains/ens-print): Micro App for printing ENS stickers
- [docs-v2](https://github.com/ensdomains/docs-v2): The Ethereum Name Service (ENS) is a distributed, open, and extensible naming system based on the Ethereum blockchain. This repository contains documentation, examples, and much more.
- [ens-avatar-worker](https://github.com/ensdomains/ens-avatar-worker): Cloudflare worker that facilitates gasless avatar record updates via the ENS manager app
- [batch-gateway](https://github.com/ensdomains/batch-gateway): No description available
- [ens-bigquery-udf](https://github.com/ensdomains/ens-bigquery-udf): No description available
- [universal-offchain-unwrapper](https://github.com/ensdomains/universal-offchain-unwrapper): No description available
- [op-resolver](https://github.com/ensdomains/op-resolver): No description available
- [arbitrum-resolver](https://github.com/ensdomains/arbitrum-resolver): No description available
- [ens-support-docs](https://github.com/ensdomains/ens-support-docs): ENS Support Docs
- [arb-resolver](https://github.com/ensdomains/arb-resolver): No description available
- [ens-avatar-fallback](https://github.com/ensdomains/ens-avatar-fallback): No description available
- [ens-faucet-worker](https://github.com/ensdomains/ens-faucet-worker): Cloudflare worker to help distribute testnet ETH to ENS manager app users
- [ccip-read-dns-gateway](https://github.com/ensdomains/ccip-read-dns-gateway): ENS CCIP-Read DNSSEC Gateway
- [ens-dao-landing](https://github.com/ensdomains/ens-dao-landing): No description available
- [moonpay-worker](https://github.com/ensdomains/moonpay-worker): No description available
- [ens-misctools](https://github.com/ensdomains/ens-misctools): Miscellaneous tasks that aren't yet in the ENS Manager App
- [normalise-refund](https://github.com/ensdomains/normalise-refund): No description available
- [ccip-tools](https://github.com/ensdomains/ccip-tools): CCIP Multitool for testing your offchain resolver!
- [gas-estimate-worker](https://github.com/ensdomains/gas-estimate-worker): Cloudflare worker for estimating registration gas costs with tenderly
- [ens-l2-subgraph](https://github.com/ensdomains/ens-l2-subgraph): No description available
- [ethers-ccip-read](https://github.com/ensdomains/ethers-ccip-read): Ethers-rs CCIP-Read Middleware
- [context-resolver](https://github.com/ensdomains/context-resolver): No description available
- [blog](https://github.com/ensdomains/blog): Official Ethereum Name Service Blog
- [frontend-template](https://github.com/ensdomains/frontend-template): Starter web app for web3 developers
- [evmgateway](https://github.com/ensdomains/evmgateway): This repository implements a generic CCIP-Read gateway for fetching state proofs of data on other EVM chains. The intended use is for contracts on L1 to be able to fetch and verify data from contracts on L2 in a read context.
- [multiformats](https://github.com/ensdomains/multiformats): Multiformats interface (multihash, multicodec, multibase and CID)
- [ens-og-image](https://github.com/ensdomains/ens-og-image): No description available
- [offchain-gateway-rs](https://github.com/ensdomains/offchain-gateway-rs): Offchain CCIP Gateway Resolver implementation in Rust
- [router-ts-worker](https://github.com/ensdomains/router-ts-worker): No description available
- [ens-nft-worker](https://github.com/ensdomains/ens-nft-worker): No description available
- [cheatsheet](https://github.com/ensdomains/cheatsheet): No description available
- [ccip-tools-contracts](https://github.com/ensdomains/ccip-tools-contracts): No description available
- [namechain](https://github.com/ensdomains/namechain): No description available
- [ens-evmgateway](https://github.com/ensdomains/ens-evmgateway): No description available
- [hardhat-chai-matchers-viem](https://github.com/ensdomains/hardhat-chai-matchers-viem): Hardhat chai matchers for viem
- [multi-delegate](https://github.com/ensdomains/multi-delegate): Participate in the ENS DAO by delegating your $ENS.
- [headless-web3-provider](https://github.com/ensdomains/headless-web3-provider): Headless MetaMask for testing Ethereum apps
- [ensips](https://github.com/ensdomains/ensips): ENS Improvement Proposals
- [cointype-worker](https://github.com/ensdomains/cointype-worker): No description available
- [auth-worker](https://github.com/ensdomains/auth-worker): No description available
- [ccip-read-router](https://github.com/ensdomains/ccip-read-router): No description available
- [hardhat-toolbox-viem-extended](https://github.com/ensdomains/hardhat-toolbox-viem-extended): Extended Hardhat toolbox for viem
- [verifiable-factory](https://github.com/ensdomains/verifiable-factory): No description available
- [dnssec-debugger](https://github.com/ensdomains/dnssec-debugger): No description available
- [ens-test-env](https://github.com/ensdomains/ens-test-env): ENS testing environment
- [ens-l2-primary-demo](https://github.com/ensdomains/ens-l2-primary-demo): No description available
- [ens-page](https://github.com/ensdomains/ens-page): No description available
- [single-use-upgradable-proxy](https://github.com/ensdomains/single-use-upgradable-proxy): No description available
- [gateways-serve](https://github.com/ensdomains/gateways-serve): No description available
- [unruggable-gateways](https://github.com/ensdomains/unruggable-gateways): This repository implements a complete solution for fetching proofs of data from rollup chains and verifying that data on Layer 1 Ethereum.
- [ens-ponder](https://github.com/ensdomains/ens-ponder): No description available
- [ens-manager-v4-demo](https://github.com/ensdomains/ens-manager-v4-demo): No description available
- [vite-plugin-i18next-loader](https://github.com/ensdomains/vite-plugin-i18next-loader): Vite plugin to client bundle i18next locales composited from one to many json/yaml files from one to many libraries. Zero config HMR support included.

---

# docs.login.xyz llms.txt

> Offering resources and guidance for integrating Sign-In with Ethereum, enhancing user control over digital identities in web applications, while promoting best practices and supporting community involvement within the Ethereum ecosystem.

- [SIWE Security Guidelines](https://docs.siwe.xyz/security-considerations): Offer comprehensive security best practices for implementing Sign In with Ethereum (SIWE) authentication.
- [SIWE Auth0 Integration](https://docs.siwe.xyz/integrations/auth0): Guide integration of Sign In With Ethereum (SIWE) authentication with Auth0 for web2 applications.
- [TypeScript SIWE Library](https://docs.siwe.xyz/libraries/typescript): Provide TypeScript library documentation and integration examples for Sign in with Ethereum (EIP-4361) implementation.
- [SIWE Integration for Rails](https://docs.siwe.xyz/libraries/ruby/rails): Guide Rails developers on integrating Sign in with Ethereum authentication using multiple approaches and setup steps.
- [Retrieve Onchain Data](https://docs.siwe.xyz/quickstart/retrieve-onchain-data): Guide developers on accessing and using onchain Ethereum data like ENS, EFP, and assets after user authentication.
- [Sign in with Ethereum Quickstart](https://docs.siwe.xyz/quickstart): Guide to implement Sign in with Ethereum authentication including frontend, backend, and session management.
- [Go SIWE Library Guide](https://docs.siwe.xyz/libraries/go): Guide to installing and using the Go library for Sign in with Ethereum authentication.
- [Sign in with Ethereum Docs](https://docs.siwe.xyz): Guide developers to implement secure Ethereum account authentication via the Sign in with Ethereum (SIWE) standard.
- [SIWE Backend Verification](https://docs.siwe.xyz/quickstart/backend-verification): Guide to building a secure Express.js backend for verifying SIWE signatures and managing authentication.
- [OIDC Provider Guide](https://docs.siwe.xyz/oidc-provider): Explain how to use OpenID Connect for consolidated Sign in with Ethereum authentication.
- [EFP Data Integration Guide](https://docs.siwe.xyz/quickstart/resolve-efp-data): Guide developers to integrate and display Ethereum Follow Protocol (EFP) social graph data using API and React components.
- [SIWE Session Implementation](https://docs.siwe.xyz/quickstart/implement-sessions): Guide to implement Express.js sessions for backend security in Sign in with Ethereum (SIWE) projects.
- [SIWE Message Validator](https://docs.siwe.xyz/validator): Validate and lint Sign in with Ethereum messages for EIP-4361 compliance and security best practices.
- [Migrating SIWE to v2](https://docs.siwe.xyz/libraries/typescript/migrating-to-v2): Guide to upgrading TypeScript SIWE library from version 1.1.6 to 2.1.x with detailed changes and steps.
- [SIWE TypeScript Quickstart](https://docs.siwe.xyz/libraries/typescript/typescript-quickstart): Guide to quickly set up and run a TypeScript example for Sign in with Ethereum using a notepad app.
- [Onchain Holdings Guide](https://docs.siwe.xyz/quickstart/resolve-onchain-holdings): Guide for developers to retrieve and display users' onchain token and NFT holdings via blockchain APIs.
- [Connect Frontend Guide](https://docs.siwe.xyz/quickstart/connect-the-frontend): Guide to updating frontend for signing and sending Ethereum authentication messages to backend.
- [SIWE React Frontend Setup](https://docs.siwe.xyz/quickstart/frontend-setup): Guide to build a React frontend for connecting Ethereum wallets and using SIWE for authentication user signatures.
- [Elixir SIWE Library](https://docs.siwe.xyz/libraries/elixir): Provide Elixir library installation and usage instructions for Sign in with Ethereum integration.
- [Ruby SIWE Library](https://docs.siwe.xyz/libraries/ruby): Provide installation, usage, and error handling instructions for the Ruby Sign-In with Ethereum library.
- [SIWE Integration Guide](https://docs.siwe.xyz/integrations): Guide developers on integrating Sign in with Ethereum (SIWE) for decentralized authentication across platforms.
- [NextAuth.js Ethereum Integration](https://docs.siwe.xyz/integrations/nextauth.js): Guide to integrating Sign in with Ethereum using NextAuth.js in Next.js applications.
- [SIWE Validator Guide](https://docs.siwe.xyz/validator/validator-guide): Guide to validating, linting, and debugging Sign-In with Ethereum messages per EIP-4361 standards.
- [Rust SIWE Documentation](https://docs.siwe.xyz/libraries/rust): Provide documentation and resources for using the Rust implementation of Sign in with Ethereum.
- [Resolving ENS Profiles](https://docs.siwe.xyz/quickstart/resolve-ens-profiles): Guide to integrating ENS profile resolution and display into applications using JavaScript and React components.
- [SIWE Libraries Overview](https://docs.siwe.xyz/libraries): Detail official SIWE libraries across languages for EIP-4361 authentication integration with usage and migration guidance.
- [Ethereum Identity Kit Docs](https://docs.siwe.xyz/libraries/ethereum-idetntiy-kit): Provide documentation and resources for using the Ethereum Identity Kit library in dapp development.
- [Sign in with Ethereum Python](https://docs.siwe.xyz/libraries/python): Provide documentation and resources for the Python implementation of Sign in with Ethereum.
- [SIWE Integration for Discourse](https://docs.siwe.xyz/integrations/discourse): Guide to integrate Sign in with Ethereum authentication into a Discourse discussion platform.
- [SIWE Message Creation Guide](https://docs.siwe.xyz/quickstart/creating-messages): Guide developers to create and implement Sign in with Ethereum (SIWE) authentication messages securely using TypeScript.
- [EIP-4361: Sign-In with Ethereum](https://eips.ethereum.org/EIPS/eip-4361): Off-chain authentication for Ethereum accounts to establish sessions.